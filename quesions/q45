|- let a = 3 in let f = fun y -> y * a in let a = 5 in f 4 evalto 12 by E-Let {
    |- 3 evalto 3 by E-Int {};
    a = 3 |- let f = fun y -> y * a in let a = 5 in f 4 evalto 12 by E-Let {
        a = 3 |- fun y -> y * a evalto (a=3)[fun y -> y * a] by E-Fun {};
        a = 3, f = (a=3)[fun y -> y * a] |- let a = 5 in f 4 evalto 12 by E-Let {
            a = 3, f = (a=3)[fun y -> y * a] |- 5 evalto 5 by E-Int {};
            a = 3, f = (a=3)[fun y -> y * a], a = 5 |- f 4 evalto 12 by E-App {
                a = 3, f = (a=3)[fun y -> y * a], a = 5 |- f evalto (a=3)[fun y -> y * a] by E-Var2 {
                    a = 3, f = (a=3)[fun y -> y * a] |- f evalto (a=3)[fun y -> y * a] by E-Var1 {};
                };
                a = 3, f = (a=3)[fun y -> y * a], a = 5 |- 4 evalto 4 by E-Int {};
                a = 3, y = 4 |- y * a evalto 12 by E-Times {
                    a = 3, y = 4 |- y evalto 4 by E-Var1 {};
                    a = 3, y = 4 |- a evalto 3 by E-Var2 {
                        a = 3 |- a evalto 3 by E-Var1 {};
                    };
                    4 times 3 is 12 by B-Times {};
                };
            };
        };
    };
}
